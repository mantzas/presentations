Shaken to the .Net Core
drawn to the dark side

21:00 9/11/2016
Tags: .net core, asp.net core, linux, macOS

Sotirios Mantziaris
Refreshment Engineer (καφετζής)

@smantziaris
http://blog.mantziaris.eu/

* Some Conventions

Throughout the presentation we will be referring to Linux/MacOS as

- "The Other Side"
- The dark side 

No i am joking... as Linux
What goes for Linux pretty much goes for MacOS

* What is .Net Core

- Cross-Platform, runs on Windows, Linux and macOS. Can be ported to other OSes
- Flexible deployment, can be included in your app or installed side-by-side on user- or machine-wide
- Compatible with .NET Framework, Xamarin and Mono, via the .NET Standard Library.
- Command-line tools
- Open source
- Supported by Microsoft
- C# and F# (VB will come)

* .NET Platforms Support

- netstandard 1.6 supports .Net Core 1.0, .Net Framework vNext, Mono/Xamarin vNext, UWP vNext
- netstandard 1.5 supports .Net Core 1.0, .Net Framework 4.6.2, Mono/Xamarin vNext, UWP vNext
- netstandard 1.5 supports .Net Core 1.0, .Net Framework 4.6.1, Mono/Xamarin vNext, UWP 10.0
- etc
- the rest is [[https://docs.microsoft.com/en-us/dotnet/articles/standard/library][here]]

: show the site to get the compatibility matrix

* What is ASP.NET Core
- Kestrel (Web Server)
- Not IIS, missing features like windows auth

* What is EF Core
- Rewritten, not refactored
- Improved
- Lightweight
- Missing : https://docs.efproject.net/en/latest/efcore-vs-ef6/features.html

* Other data access options

- According to this [[https://blogs.msdn.microsoft.com/dotnet/2016/11/09/net-core-data-access/][blog]] we have

 ORM like EF Core, Dapper
 Relational like Sql Server, PostgreSQL, MySQL, SQLite
 NoSQL like Azure DocumentDB, MongoDB, RavenDB, Redis, Cassandra, CouchBase, 
 CouchDB, Neo4j, RethinkDB, YesSql, Lucene.NET

* Who is using it

- Illyriad Games
Age Of Ascent
http://web.ageofascent.com/category/development/aspnet-5/
using Nano Server

//TODO

* Installation

- [[https://www.microsoft.com/net/core#windows][Windows]]
- [[https://www.microsoft.com/net/core#ubuntu][Linux]]

: do the installation live on VM

* How to use it

- dotnet (cmd)

  new           Initialize a basic .NET project
  restore       Restore dependencies specified in the .NET project
  build         Builds a .NET project
  publish       Publishes a .NET project for deployment (including the runtime)
  run           Compiles and immediately executes a .NET project
  test          Runs unit tests using the test runner specified in the project
  pack          Creates a NuGet package

- custom dotnet command can be build like these [[https://github.com/aspnet/DotNetTools][tools]] 
- [[https://docs.asp.net/en/latest/client-side/yeoman.html][yeoman]]
- and off course Visual Studio

: show off dotnet new, restore, build, publish
: show off dotnet watch
: show off yeoman

* Windows IDE
- Visual Studio 2015 Update 3 with .NET Core 1.0.1 - VS 2015 Tooling Preview 2
- Text Editors with C# extension (Omnisharp) like Visual Studio Code, Sublime, Atom, etc
- Jetbrains Project Rider (Early Access Program)

* IDE for Linux
- No Visual Studio! :( (not yet)
- Text Editors with C# extension (Omnisharp) like Visual Studio Code, Sublime, Atom, Vim, etc
- Jetbrains Project Rider (Early Access Program)

* Development Environment

It depends. Choose Windows if

- If you deploy to Windows
- Make use of Windows Components

Choose Linux if

- you are deploying exclusively to Linux
- you are using Docker, Redis, Cassandra, PostgreSQL which are native in Linux

But you can mix and match having VM or containers with all the above

* Production Environment
- Use of much cheaper infra (Dollars in Europe)
- Examples of pricing for a VM with 4 cores and 8GB RAM

AWS

- c4.xlarge Linux 0.238/hr -> ~ 171,36/Month
- c4.xlarge Windows 0.417/hr -> ~ 300,24/Month

Azure

- F4 Linux 0.238/hr -> ~171,36/Month
- F4 Windows 0.408/hr -> ~ 293.76/Month

Google Cloud

- custom Linux 0.19484/hr -> ~ 113/Month
- pricing for windows includes to the above the licensing cost

* Production Environment (cont.)

App can be containerized (Docker)

- AWS Container Service
- Azure Container Service
- Google Cloud Container Engine

: show a application how to dockerize it and run

* The Good

- True Cross-Platform off course, no MONO stuff. First Class Citizen
- Since everything is a Nuget we do not have to wait a new version of .Net. Just update the nuget
- ASP.NET with Kestrel is blazing fast, ~1,2 Req/s and counting... (https://github.com/aspnet/benchmarks)
- Usage of Docker and other stuff like Kubernetes
- CLI which allows us to make nice automation scripts
- The open source community and the contributions

* The Good (cont.)

- Much cheaper infra see Production Environment section

- OS needs less resources on Linux and saves money
 Linux Server ~145MB
 Windows 2016 ~1GB
 
- .Net is not a windows thing anymore
- The Linux dev machine specs are lower or you get more machine out of the hardware
- Windows 10 needs much more resources than a Linux distro (especially some distro with minimal UI like LXDE need only 10ths of MB Ram to run). Shame on Windows Memory Hog!!!

* The Bad

- NO Windows Components like

 IIS (Windows Auth)
 Performance Counters
 Event Logs
 ETW
 MSDTC
 ETC

* The Bad (cont.)

- NO or few APM solution out there
- NO SQL Server Running for development in Linux… but it is coming.
- NO MS IDE like Visual Studio which is a fantastic IDE
- NO Tooling available or still in preview
 Code Analysis
 Unit Test Runners
 etc

- The project.json vs csproj fiasco

* The Bad (cont.)

- Some things are discontinued
 App Domain, which maybe come again due to community uprise (open source)
 Remoting
 Binary Serialization
 Sandboxing

- Some things change, like project.json and csproj
- F#, VB.Net is not First Class Citizen here.
- Version, Profiles etc are still confusing
- Time to get the community/companies to update their nuget libs. Major one have already started. Beware tha some libs
- Solid understanding of Linux is a must if you maintain your hardware

: some libs like log4net, NHibernate probably won't make it. They did not even get on the .net 4.5+ train so good they are gone 

* QnA

* References

//TODO